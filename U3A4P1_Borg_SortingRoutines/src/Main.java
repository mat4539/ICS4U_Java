
import java.util.Arrays;

/*
    programmer: Mathew Borg
    Date: 2021-06-1
    Program Name: U3A4P1_Borg_SortingRoutines
    Program Discription: This program will sort a list of random numbers. 
                         The random numbers are in the range of -1 000 to 1 000.
                         The user can choose which sorting algorithm to use to 
                         sort the numbers (selection, bubble, insertion, quick),
                         how many numbers are to be sorted in the list and
                         whether the list is sorted in ascending or descending order.
 */
public class Main extends javax.swing.JFrame {
    //creats private static int arrays and ints
    private static int[] numbers, numbersSorted;
    private static int amountOfNums;
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sortType = new javax.swing.ButtonGroup();
        sortOrder = new javax.swing.ButtonGroup();
        title = new javax.swing.JLabel();
        author = new javax.swing.JLabel();
        enterInfo = new javax.swing.JLabel();
        sortAlgorithumText = new javax.swing.JLabel();
        sortTypeText = new javax.swing.JLabel();
        ammountNumSort = new javax.swing.JLabel();
        btnSortNum = new javax.swing.JButton();
        originalNumbers = new javax.swing.JLabel();
        sortedNumbers = new javax.swing.JLabel();
        btnSelection = new javax.swing.JRadioButton();
        btnBubble = new javax.swing.JRadioButton();
        btnInsertion = new javax.swing.JRadioButton();
        btnQuick = new javax.swing.JRadioButton();
        btnAscending = new javax.swing.JRadioButton();
        btnDescending = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputSortedNumbers = new javax.swing.JTextArea();
        inputNumbersToSort = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputOriginalNumbers = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        title.setForeground(new java.awt.Color(10, 10, 255));
        title.setText("Sorting Routines");

        author.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        author.setText("By: Mathew Borg");

        enterInfo.setText("Enter The following information:");

        sortAlgorithumText.setText("Sorting Algorithm:");

        sortTypeText.setText("Sort Order");

        ammountNumSort.setText("Amount of Numbers to Sort:");

        btnSortNum.setText("Sort Numbers");
        btnSortNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortNumActionPerformed(evt);
            }
        });

        originalNumbers.setText("Original Numbers");

        sortedNumbers.setText("Sorted Numbers");

        sortType.add(btnSelection);
        btnSelection.setText("Selection");

        sortType.add(btnBubble);
        btnBubble.setText("Bubble");

        sortType.add(btnInsertion);
        btnInsertion.setText("Insertion");

        sortType.add(btnQuick);
        btnQuick.setText("Quick");

        sortOrder.add(btnAscending);
        btnAscending.setText("Ascending");

        sortOrder.add(btnDescending);
        btnDescending.setText("Desending");

        outputSortedNumbers.setColumns(20);
        outputSortedNumbers.setRows(5);
        outputSortedNumbers.setEnabled(false);
        jScrollPane2.setViewportView(outputSortedNumbers);

        outputOriginalNumbers.setColumns(20);
        outputOriginalNumbers.setRows(5);
        outputOriginalNumbers.setEnabled(false);
        jScrollPane1.setViewportView(outputOriginalNumbers);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnInsertion)
                                    .addComponent(originalNumbers))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ammountNumSort)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputNumbersToSort))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnQuick)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSortNum))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sortAlgorithumText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sortTypeText))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSelection)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAscending))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBubble)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDescending))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sortedNumbers)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 56, Short.MAX_VALUE)
                .addComponent(title)
                .addGap(53, 53, 53))
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(enterInfo)
                    .addComponent(author))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(author)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enterInfo)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortAlgorithumText)
                    .addComponent(sortTypeText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelection)
                    .addComponent(btnAscending))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBubble)
                    .addComponent(btnDescending))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnInsertion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQuick)
                    .addComponent(btnSortNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ammountNumSort)
                    .addComponent(inputNumbersToSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(originalNumbers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sortedNumbers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSortNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortNumActionPerformed
        String sTemp = ""; //creats int and sets it to 0
        
        try { //trys to convert string input to interger
            sTemp = inputNumbersToSort.getText(); //sets string to inputNum value
            amountOfNums = Integer.parseInt(sTemp); //converts string to int
        } catch (NumberFormatException e) { //catch letters are typed in
            inputNumbersToSort.setText("Enter Numbers Only!!"); //set Text to Enter Numbers Only!!
            return; //retry the program
        }
      
        numbers = new int[amountOfNums]; //sets the range of the numbers array
        for (int i = 0; i < numbers.length; i++) { //for loop the length of the numbers array
            int range = (1000 - -1000) + 1; //sets int range to = 1000 - -1000 + 1
            numbers[i] = (int) (Math.random() * range) + -1000; //sets assigns random numbers from -1000 to 1000 to numbers array
        }
        
        outputOriginalNumbers.setText(Arrays.toString(numbers)); //prints numbers array to text area 
        
        if (btnSelection.isSelected()) { //if btnSelection is clicked 
            numbersSorted = SortingRoutines.sortSelection(numbers, btnAscending.isSelected(), btnDescending.isSelected()); //set numbers sorted array to the return value of sortSelection method
        } else if (btnBubble.isSelected()) { //if btnBubble is clicked 
            numbersSorted = SortingRoutines.sortBubble(numbers, btnAscending.isSelected(), btnDescending.isSelected()); //set numbers sorted array to the return value of sortBubble method
        } else if (btnInsertion.isSelected()) { //if btnInsertion is clicked 
            numbersSorted = SortingRoutines.sortInsertion(numbers, btnAscending.isSelected(), btnDescending.isSelected()); //set numbers sorted array to the return value of sortInsertion method
        } else if (btnQuick.isSelected()) { //if btnQuick is clicked 
            numbersSorted = SortingRoutines.sortQuick(numbers, btnAscending.isSelected(), btnDescending.isSelected()); //set numbers sorted array to the return value of sortQuick method
        }
              
        outputSortedNumbers.setText(Arrays.toString(numbersSorted)); //prints numbersSorted array to text area
        
    }//GEN-LAST:event_btnSortNumActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ammountNumSort;
    private javax.swing.JLabel author;
    private javax.swing.JRadioButton btnAscending;
    private javax.swing.JRadioButton btnBubble;
    private javax.swing.JRadioButton btnDescending;
    private javax.swing.JRadioButton btnInsertion;
    private javax.swing.JRadioButton btnQuick;
    private javax.swing.JRadioButton btnSelection;
    private javax.swing.JButton btnSortNum;
    private javax.swing.JLabel enterInfo;
    private javax.swing.JTextField inputNumbersToSort;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel originalNumbers;
    private javax.swing.JTextArea outputOriginalNumbers;
    private javax.swing.JTextArea outputSortedNumbers;
    private javax.swing.JLabel sortAlgorithumText;
    private javax.swing.ButtonGroup sortOrder;
    private javax.swing.ButtonGroup sortType;
    private javax.swing.JLabel sortTypeText;
    private javax.swing.JLabel sortedNumbers;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
