/*
    programmer: Mathew Borg
    Date: 2021-03-27
    Program Name: U2A3P1_Borg_MatchGame
    Program Discription: This profram uses arrays to simulate a matching game.
    A grid of cards will be displayed and the user is to select 2 cards at a time
    looking for a matching card. the goal of this game is to see how quickly
    the user can find all the matches. 
*/
import java.util.*;
import javax.swing.ImageIcon;

public class Main extends javax.swing.JFrame {
    //Creats String Array Lists
    ArrayList <String> cards = new ArrayList();
    ArrayList <String> set = new ArrayList();
    
    //assigns images to ImageIcon
    ImageIcon a = new ImageIcon("src\\images\\AC.jpg");
    ImageIcon b = new ImageIcon("src\\images\\DG.jpg");
    ImageIcon c = new ImageIcon("src\\images\\GO.jpg");
    ImageIcon d = new ImageIcon("src\\images\\IJ.jpg");
    ImageIcon e = new ImageIcon("src\\images\\PC.jpg");
    ImageIcon f = new ImageIcon("src\\images\\PS.jpg");
    ImageIcon g = new ImageIcon("src\\images\\UP.jpg");
    ImageIcon h = new ImageIcon("src\\images\\WS.jpg");
    ImageIcon back = new ImageIcon("src\\images\\cardback.jpg");
    ImageIcon done = new ImageIcon("src\\images\\done.jpg");
    
    //creats Ints and int array
    int count, c1, c2, card1, card2;
    int cardsLeft = 16;
    int[] change = new int [16];

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCard1 = new javax.swing.JButton();
        btnCard2 = new javax.swing.JButton();
        btnCard3 = new javax.swing.JButton();
        btnCard4 = new javax.swing.JButton();
        btnCard5 = new javax.swing.JButton();
        btnCard6 = new javax.swing.JButton();
        btnCard7 = new javax.swing.JButton();
        btnCard8 = new javax.swing.JButton();
        btnCard9 = new javax.swing.JButton();
        btnCard10 = new javax.swing.JButton();
        btnCard11 = new javax.swing.JButton();
        btnCard12 = new javax.swing.JButton();
        btnCard13 = new javax.swing.JButton();
        btnCard14 = new javax.swing.JButton();
        btnCard15 = new javax.swing.JButton();
        btnCard16 = new javax.swing.JButton();
        mainTitle = new javax.swing.JLabel();
        authorTitle = new javax.swing.JLabel();
        btnPlay = new javax.swing.JButton();
        btnGuessAgain = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        instructionBox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard1ActionPerformed(evt);
            }
        });

        btnCard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard2ActionPerformed(evt);
            }
        });

        btnCard3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard3ActionPerformed(evt);
            }
        });

        btnCard4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard4ActionPerformed(evt);
            }
        });

        btnCard5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard5ActionPerformed(evt);
            }
        });

        btnCard6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard6ActionPerformed(evt);
            }
        });

        btnCard7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard7ActionPerformed(evt);
            }
        });

        btnCard8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard8ActionPerformed(evt);
            }
        });

        btnCard9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard9ActionPerformed(evt);
            }
        });

        btnCard10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard10ActionPerformed(evt);
            }
        });

        btnCard11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard11ActionPerformed(evt);
            }
        });

        btnCard12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard12ActionPerformed(evt);
            }
        });

        btnCard13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard13ActionPerformed(evt);
            }
        });

        btnCard14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard14ActionPerformed(evt);
            }
        });

        btnCard15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard15ActionPerformed(evt);
            }
        });

        btnCard16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cardback.jpg"))); // NOI18N
        btnCard16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCard16ActionPerformed(evt);
            }
        });

        mainTitle.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        mainTitle.setText("Matching Game");

        authorTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        authorTitle.setText("By: Mathew Borg");

        btnPlay.setText("Play");
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        btnGuessAgain.setText("Guess Again");
        btnGuessAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuessAgainActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        instructionBox.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        instructionBox.setText("Click the Play button to start. Make sure to click Guess Again after each guess.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCard13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCard14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCard15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCard16))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCard9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCard10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCard11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCard12))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnCard5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnCard6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnCard7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnCard8))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(mainTitle)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnCard1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnCard2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnCard3)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnCard4)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(btnPlay)
                        .addGap(40, 40, 40)
                        .addComponent(btnGuessAgain)
                        .addGap(42, 42, 42)
                        .addComponent(btnExit))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(instructionBox)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(authorTitle)
                .addGap(156, 156, 156))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTitle)
                .addGap(5, 5, 5)
                .addComponent(authorTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCard4)
                    .addComponent(btnCard2)
                    .addComponent(btnCard1)
                    .addComponent(btnCard3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCard8)
                    .addComponent(btnCard6)
                    .addComponent(btnCard5)
                    .addComponent(btnCard7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCard12)
                    .addComponent(btnCard10)
                    .addComponent(btnCard9)
                    .addComponent(btnCard11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCard16)
                    .addComponent(btnCard14)
                    .addComponent(btnCard13)
                    .addComponent(btnCard15))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPlay)
                    .addComponent(btnGuessAgain)
                    .addComponent(btnExit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(instructionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0); //exits program
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
        //Set the change array. This section sets up the array to check if a match has been made.
        for (int z = 0; z <= 15; z++){
            change[z] = 1;
            
        }
        
        /*
        Assign cards at random.
        The outer loop puts the numbers zero to seven in the set arrayList.
        The inner loop puts the numbers in two consecutive array entries.
        The set.add(temp) line puts the entry in the next available position.
        The double index = Math.floor (Math.random() * (16-x)) creates a random 
        number and converts it to integer status.
        The next two lines add the card to the random arrayList cards, remove 
        them from the original array, then renumber the remaining cards. The 
        random number is then generated again, but for one less element.
        */
        
        String temp;
        for (int x = 0; x <= 7; x++){
            for (int y = 1; y <= 2; y++){
                temp = Integer.toString(x);
                set.add(temp);
            }
        }
        
        for (int x = 0; x <= 15; x++){
            double index = Math.floor(Math.random()*(16-x));
            int index1 = (int) index;
            cards.add(set.get(index1));
            set.remove(set.get(index1));
        }
        
      
    }//GEN-LAST:event_btnPlayActionPerformed

    private void btnCard1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard1ActionPerformed
        //checks to see what random picture is placed in the box.
        
        String temp = cards.get(0); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard1.setIcon(a);
        }else if (temp.equals("1")){
            btnCard1.setIcon(b);
        }else if (temp.equals("2")){
            btnCard1.setIcon(c);
        }else if (temp.equals("3")){
            btnCard1.setIcon(d);
        }else if (temp.equals("4")){
            btnCard1.setIcon(e);
        }else if (temp.equals("5")){
            btnCard1.setIcon(f);
        }else if (temp.equals("6")){
            btnCard1.setIcon(g);
        }else if (temp.equals("7")){
            btnCard1.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[0] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[0] = 0;
        }      
        
    }//GEN-LAST:event_btnCard1ActionPerformed

    private void btnCard2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard2ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(1); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard2.setIcon(a);
        }else if (temp.equals("1")){
            btnCard2.setIcon(b);
        }else if (temp.equals("2")){
            btnCard2.setIcon(c);
        }else if (temp.equals("3")){
            btnCard2.setIcon(d);
        }else if (temp.equals("4")){
            btnCard2.setIcon(e);
        }else if (temp.equals("5")){
            btnCard2.setIcon(f);
        }else if (temp.equals("6")){
            btnCard2.setIcon(g);
        }else if (temp.equals("7")){
            btnCard2.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[1] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[1] = 0;
        }     
    }//GEN-LAST:event_btnCard2ActionPerformed

    private void btnCard3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard3ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(2); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard3.setIcon(a);
        }else if (temp.equals("1")){
            btnCard3.setIcon(b);
        }else if (temp.equals("2")){
            btnCard3.setIcon(c);
        }else if (temp.equals("3")){
            btnCard3.setIcon(d);
        }else if (temp.equals("4")){
            btnCard3.setIcon(e);
        }else if (temp.equals("5")){
            btnCard3.setIcon(f);
        }else if (temp.equals("6")){
            btnCard3.setIcon(g);
        }else if (temp.equals("7")){
            btnCard3.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[2] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[2] = 0;
        }   
    }//GEN-LAST:event_btnCard3ActionPerformed

    private void btnCard4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard4ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(3); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard4.setIcon(a);
        }else if (temp.equals("1")){
            btnCard4.setIcon(b);
        }else if (temp.equals("2")){
            btnCard4.setIcon(c);
        }else if (temp.equals("3")){
            btnCard4.setIcon(d);
        }else if (temp.equals("4")){
            btnCard4.setIcon(e);
        }else if (temp.equals("5")){
            btnCard4.setIcon(f);
        }else if (temp.equals("6")){
            btnCard4.setIcon(g);
        }else if (temp.equals("7")){
            btnCard4.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[3] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[3] = 0;
        }   
    }//GEN-LAST:event_btnCard4ActionPerformed

    private void btnCard5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard5ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(4);
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard5.setIcon(a);
        }else if (temp.equals("1")){
            btnCard5.setIcon(b);
        }else if (temp.equals("2")){
            btnCard5.setIcon(c);
        }else if (temp.equals("3")){
            btnCard5.setIcon(d);
        }else if (temp.equals("4")){
            btnCard5.setIcon(e);
        }else if (temp.equals("5")){
            btnCard5.setIcon(f);
        }else if (temp.equals("6")){
            btnCard5.setIcon(g);
        }else if (temp.equals("7")){
            btnCard5.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[4] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[4] = 0;
        }   
    }//GEN-LAST:event_btnCard5ActionPerformed

    private void btnCard6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard6ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(5); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard6.setIcon(a);
        }else if (temp.equals("1")){
            btnCard6.setIcon(b);
        }else if (temp.equals("2")){
            btnCard6.setIcon(c);
        }else if (temp.equals("3")){
            btnCard6.setIcon(d);
        }else if (temp.equals("4")){
            btnCard6.setIcon(e);
        }else if (temp.equals("5")){
            btnCard6.setIcon(f);
        }else if (temp.equals("6")){
            btnCard6.setIcon(g);
        }else if (temp.equals("7")){
            btnCard6.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[5] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[5] = 0;
        }   
    }//GEN-LAST:event_btnCard6ActionPerformed

    private void btnCard7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard7ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(6); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard7.setIcon(a);
        }else if (temp.equals("1")){
            btnCard7.setIcon(b);
        }else if (temp.equals("2")){
            btnCard7.setIcon(c);
        }else if (temp.equals("3")){
            btnCard7.setIcon(d);
        }else if (temp.equals("4")){
            btnCard7.setIcon(e);
        }else if (temp.equals("5")){
            btnCard7.setIcon(f);
        }else if (temp.equals("6")){
            btnCard7.setIcon(g);
        }else if (temp.equals("7")){
            btnCard7.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[6] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[6] = 0;
        }   
    }//GEN-LAST:event_btnCard7ActionPerformed

    private void btnCard8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard8ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(7); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard8.setIcon(a);
        }else if (temp.equals("1")){
            btnCard8.setIcon(b);
        }else if (temp.equals("2")){
            btnCard8.setIcon(c);
        }else if (temp.equals("3")){
            btnCard8.setIcon(d);
        }else if (temp.equals("4")){
            btnCard8.setIcon(e);
        }else if (temp.equals("5")){
            btnCard8.setIcon(f);
        }else if (temp.equals("6")){
            btnCard8.setIcon(g);
        }else if (temp.equals("7")){
            btnCard8.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[7] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[7]= 0;
        }   
    }//GEN-LAST:event_btnCard8ActionPerformed

    private void btnCard9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard9ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(8);
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard9.setIcon(a);
        }else if (temp.equals("1")){
            btnCard9.setIcon(b);
        }else if (temp.equals("2")){
            btnCard9.setIcon(c);
        }else if (temp.equals("3")){
            btnCard9.setIcon(d);
        }else if (temp.equals("4")){
            btnCard9.setIcon(e);
        }else if (temp.equals("5")){
            btnCard9.setIcon(f);
        }else if (temp.equals("6")){
            btnCard9.setIcon(g);
        }else if (temp.equals("7")){
            btnCard9.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[8] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[8] = 0;
        }   
    }//GEN-LAST:event_btnCard9ActionPerformed

    private void btnCard10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard10ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(9); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard10.setIcon(a);
        }else if (temp.equals("1")){
            btnCard10.setIcon(b);
        }else if (temp.equals("2")){
            btnCard10.setIcon(c);
        }else if (temp.equals("3")){
            btnCard10.setIcon(d);
        }else if (temp.equals("4")){
            btnCard10.setIcon(e);
        }else if (temp.equals("5")){
            btnCard10.setIcon(f);
        }else if (temp.equals("6")){
            btnCard10.setIcon(g);
        }else if (temp.equals("7")){
            btnCard10.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[9] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[9] = 0;
        }   
    }//GEN-LAST:event_btnCard10ActionPerformed

    private void btnCard11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard11ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(10); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard11.setIcon(a);
        }else if (temp.equals("1")){
            btnCard11.setIcon(b);
        }else if (temp.equals("2")){
            btnCard11.setIcon(c);
        }else if (temp.equals("3")){
            btnCard11.setIcon(d);
        }else if (temp.equals("4")){
            btnCard11.setIcon(e);
        }else if (temp.equals("5")){
            btnCard11.setIcon(f);
        }else if (temp.equals("6")){
            btnCard11.setIcon(g);
        }else if (temp.equals("7")){
            btnCard11.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[10] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[10] = 0;
        }   
    }//GEN-LAST:event_btnCard11ActionPerformed

    private void btnCard12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard12ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(11); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard12.setIcon(a);
        }else if (temp.equals("1")){
            btnCard12.setIcon(b);
        }else if (temp.equals("2")){
            btnCard12.setIcon(c);
        }else if (temp.equals("3")){
            btnCard12.setIcon(d);
        }else if (temp.equals("4")){
            btnCard12.setIcon(e);
        }else if (temp.equals("5")){
            btnCard12.setIcon(f);
        }else if (temp.equals("6")){
            btnCard12.setIcon(g);
        }else if (temp.equals("7")){
            btnCard12.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[11] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[11] = 0;
        }   
    }//GEN-LAST:event_btnCard12ActionPerformed

    private void btnCard13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard13ActionPerformed
        ///checks to see what random picture is placed in the box.
        String temp = cards.get(12); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard13.setIcon(a);
        }else if (temp.equals("1")){
            btnCard13.setIcon(b);
        }else if (temp.equals("2")){
            btnCard13.setIcon(c);
        }else if (temp.equals("3")){
            btnCard13.setIcon(d);
        }else if (temp.equals("4")){
            btnCard13.setIcon(e);
        }else if (temp.equals("5")){
            btnCard13.setIcon(f);
        }else if (temp.equals("6")){
            btnCard13.setIcon(g);
        }else if (temp.equals("7")){
            btnCard13.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[12]= 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[12] = 0;
        }   
    }//GEN-LAST:event_btnCard13ActionPerformed

    private void btnCard14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard14ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(13); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard14.setIcon(a);
        }else if (temp.equals("1")){
            btnCard14.setIcon(b);
        }else if (temp.equals("2")){
            btnCard14.setIcon(c);
        }else if (temp.equals("3")){
            btnCard14.setIcon(d);
        }else if (temp.equals("4")){
            btnCard14.setIcon(e);
        }else if (temp.equals("5")){
            btnCard14.setIcon(f);
        }else if (temp.equals("6")){
            btnCard14.setIcon(g);
        }else if (temp.equals("7")){
            btnCard14.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[13] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[13] = 0;
        }   
    }//GEN-LAST:event_btnCard14ActionPerformed

    private void btnCard15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard15ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(14); 
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard15.setIcon(a);
        }else if (temp.equals("1")){
            btnCard15.setIcon(b);
        }else if (temp.equals("2")){
            btnCard15.setIcon(c);
        }else if (temp.equals("3")){
            btnCard15.setIcon(d);
        }else if (temp.equals("4")){
            btnCard15.setIcon(e);
        }else if (temp.equals("5")){
            btnCard15.setIcon(f);
        }else if (temp.equals("6")){
            btnCard15.setIcon(g);
        }else if (temp.equals("7")){
            btnCard15.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[14] = 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[14] = 0;
        }   
    }//GEN-LAST:event_btnCard15ActionPerformed

    private void btnCard16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCard16ActionPerformed
        //checks to see what random picture is placed in the box.
        String temp = cards.get(15);
        
        // checks the card and assigns the proper picture.
        if (temp.equals("0")){
            //changes the button icon to the correct picture.
            btnCard16.setIcon(a);
        }else if (temp.equals("1")){
            btnCard16.setIcon(b);
        }else if (temp.equals("2")){
            btnCard16.setIcon(c);
        }else if (temp.equals("3")){
            btnCard16.setIcon(d);
        }else if (temp.equals("4")){
            btnCard16.setIcon(e);
        }else if (temp.equals("5")){
            btnCard16.setIcon(f);
        }else if (temp.equals("6")){
            btnCard16.setIcon(g);
        }else if (temp.equals("7")){
            btnCard16.setIcon(h);
        }
        
        /*
        The first line sets the card chosen to one or two so it can be checked 
        for a match. The if structure sets the appropriate card chosen, and 
        then sets the change array to show the card icon has been changed.
        */
        count ++;
        if (count == 1) {
            c1 = Integer.parseInt(temp);
            change[15]= 0;
        } else if (count == 2) {
            c2 = Integer.parseInt(temp);
            change[15] = 0;
        }   
    }//GEN-LAST:event_btnCard16ActionPerformed

    private void btnGuessAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuessAgainActionPerformed
        count = 0;
        if(c1 == c2){
            for(int y = 1; y <= 2; y++){
                if(change[0] == 0){
                    btnCard1.setIcon(done);
                    change[0] = 2;
                    cardsLeft -= 1;
                }else if(change[1] == 0){
                    btnCard2.setIcon(done);
                    change[1] = 2;
                    cardsLeft -= 1;
                }else if(change[2] == 0){
                    btnCard3.setIcon(done);
                    change[2] = 2;
                    cardsLeft -= 1;
                }else if(change[3] == 0){
                    btnCard4.setIcon(done);
                    change[3] = 2;
                    cardsLeft -= 1;
                }else if(change[4] == 0){
                    btnCard5.setIcon(done);
                    change[4] = 2;
                    cardsLeft -= 1;
                }else if(change[5] == 0){
                    btnCard6.setIcon(done);
                    change[5] = 2;
                    cardsLeft -= 1;
                }else if(change[6] == 0){
                    btnCard7.setIcon(done);
                    change[6] = 2;
                    cardsLeft -= 1;
                }else if(change[7] == 0){
                    btnCard8.setIcon(done);
                    change[7] = 2;
                    cardsLeft -= 1;
                }else if(change[8] == 0){
                    btnCard9.setIcon(done);
                    change[8] = 2;
                    cardsLeft -= 1;
                }else if(change[9] == 0){
                    btnCard10.setIcon(done);
                    change[9] = 2;
                    cardsLeft -= 1;
                }else if(change[10] == 0){
                    btnCard11.setIcon(done);
                    change[10] = 2;
                    cardsLeft -= 1;
                }else if(change[11] == 0){
                    btnCard12.setIcon(done);
                    change[11] = 2;
                    cardsLeft -= 1;
                }else if(change[12] == 0){
                    btnCard13.setIcon(done);
                    change[12] = 2;
                    cardsLeft -= 1;
                }else if(change[13] == 0){
                    btnCard14.setIcon(done);
                    change[13] = 2;
                    cardsLeft -= 1;
                }else if(change[14] == 0){
                    btnCard15.setIcon(done);
                    change[14] = 2;
                    cardsLeft -= 1;
                }else if(change[15] == 0){
                    btnCard16.setIcon(done);
                    change[15] = 2;
                    cardsLeft -= 1;
                }
            }
        }else{
            for (int y = 1; y<=2; y++) {
                 if (change[0] == 0) {
                     btnCard1.setIcon(back);
                     change[0] = 1;
                 }else if(change[1] == 0){
                     btnCard2.setIcon(back);
                     change[1] = 1;
                 }else if(change[2] == 0){
                     btnCard3.setIcon(back);
                     change[2] = 1;
                 }else if(change[3] == 0){
                     btnCard4.setIcon(back);
                     change[3] = 1;
                 }else if(change[4] == 0){
                     btnCard5.setIcon(back);
                     change[4] = 1;
                 }else if(change[5] == 0){
                     btnCard6.setIcon(back);
                     change[5] = 1;
                 }else if(change[6] == 0){
                     btnCard7.setIcon(back);
                     change[6] = 1;
                 }else if(change[7] == 0){
                     btnCard8.setIcon(back);
                     change[7] = 1;
                 }else if(change[8] == 0){
                     btnCard9.setIcon(back);
                     change[8] = 1;
                 }else if(change[9] == 0){
                     btnCard10.setIcon(back);
                     change[9] = 1;
                 }else if(change[10] == 0){
                     btnCard11.setIcon(back);
                     change[10] = 1;
                 }else if(change[11] == 0){
                     btnCard12.setIcon(back);
                     change[11] = 1;
                 }else if(change[12] == 0){
                     btnCard13.setIcon(back);
                     change[12] = 1;
                 }else if(change[13] == 0){
                     btnCard14.setIcon(back);
                     change[13] = 1;
                 }else if(change[14] == 0){
                     btnCard15.setIcon(back);
                     change[14] = 1;
                 }else if(change[15] == 0){
                     btnCard16.setIcon(back);
                     change[15] = 1;
                 }
            }
        }
        if(cardsLeft <= 0){
            instructionBox.setText("Congratulations You Have Beat The Game!! Please Exit The Game");
        }else{
            instructionBox.setText("Click the Play button to start. Make sure to click Guess Again after each guess.");
        }
    }//GEN-LAST:event_btnGuessAgainActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorTitle;
    private javax.swing.JButton btnCard1;
    private javax.swing.JButton btnCard10;
    private javax.swing.JButton btnCard11;
    private javax.swing.JButton btnCard12;
    private javax.swing.JButton btnCard13;
    private javax.swing.JButton btnCard14;
    private javax.swing.JButton btnCard15;
    private javax.swing.JButton btnCard16;
    private javax.swing.JButton btnCard2;
    private javax.swing.JButton btnCard3;
    private javax.swing.JButton btnCard4;
    private javax.swing.JButton btnCard5;
    private javax.swing.JButton btnCard6;
    private javax.swing.JButton btnCard7;
    private javax.swing.JButton btnCard8;
    private javax.swing.JButton btnCard9;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnGuessAgain;
    private javax.swing.JButton btnPlay;
    private javax.swing.JTextField instructionBox;
    private javax.swing.JLabel mainTitle;
    // End of variables declaration//GEN-END:variables
}
